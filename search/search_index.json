{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Personal blog of A. Wadih, M. Sc. A brief portfolio about me! Welcome Passionate for general knowledge, I post in this peronal blog my updated works in different fields, namely energy-related and data-driven projects. Besides my background in energy sciences & experience in data science, I am keen on working on volunteering projects. Academic context Here are cited some bounded parts of my curriculum as well as the essential publications I have made in the course of my education. Education Master's Degree M.Sc. Renewable Energy Cologne University of Applied Sciences, Germany Engineering Diploma, Branch: Energy Sciences Graduation grade: good National School of Mineral Industry (ENSMR), Rabat, Morocco Publications M.Sc. thesis : \"Model-predictive control of energy flows in a district\" , Sep. 2022 - An analysis of the energy consumption data using Python programming language has been realised. Besides, an energy model, developed with a Functional Mock-up Interface (Dymola-Software), was used to implement a model-predictive control of energy flows in a district. As to the mathematical formulation and resolution, the Python Package Pyomo as well as the CPLEX-Solver were used to formulate and solve a mixed integer linear programming MILP-Problem. Conference-paper : \"Machine learning approach for finding an optimal operation strategy for a pv-diesel-hybrid system\" , October 2023 - A research paper discusses the implementation of AI, specifically Reinforcement Learning with a \u2018Deep-Q-learning algorithm\u2019, for the optimization of energy systems. Based on an already existing pv-diesel-systems\u2019 MATLAB-model, a new AI-powered Python-Script has been developed in order to find an optimal operation strategy. The work has been presented during the Poster-Exhibition at Cologne University of Applied Sciences, Germany Engineering Diploma thesis : \"Feasibility study for the preliminary assessment of a windpark project Lafarge Ciment, factory of T\u00e9touan\" , Academic year 2015/2016 - This work constitutes a full, complete feasibility study for windpark development. It responds to the local as well as worldwide requirements related to feed-in Tarif, geotechnics, environment and economical viability. Covered topics are, inter alia, statistical weather data analysis using the IEC 61400 standard, geography of area for wind turbines\u2019 placement, investigation of the visual impact and the economic feasibility of the project. Research Paper : \"Benefits of a time-based simulation of integrated energy systems\" , winter semester 2022/2023 - As part of the energy transition, greenhouse gases are to be minimized as well as the fluctuating renewable energies are to be integrated into the energy system. In order to simulate the complex energy systems, simulation models have been developed at various research institutes. This paper presents four mainsimulation models from different institutes and some related studies and projects. The possibilities to achieve defossilization are also discussed. Experience My background in energy sciences gave me a solid motivation towards engineering concept designs. Starting from Design and engineering of conveyor belts during my internship at the moroccan company Ciments de l'Atlas - CIMAT to Performance study of the demineralized water station at the K\u00e9nitra thermal power plant , which belongs to The National Office of Electricity and Drinking Water of Morocco, I have witnessed a tangible, on the ground contribution to many industries . Furthermore, my experience in Morocco gave me confidence and self-reliance to solve problems. Maybe one challenge to that was to find reliable, accurate, and if possible, live data sets . Later on, in Germany, I have found the ground of very large bulk of data available, but needs much effort to proccess. I came to the conclusion that data-driven improvements may take time, but still possible . It was at Impuls Energy Trading GmbH, that I could think in a better structural manner. The reason, I think, utilizing new team-work methods for project management . A combination of scrum and kanban in one workflow management system for the company was very helpful. I was then very satisfied with the workflow. Nevertheless, I have felt always self-reliant, as I helped fasten the work process with my automation algorithms . Especially at Deutsche Glassfaser GmbH that I could show my potential as a key team player with automation solutions I created with Python and VBA. At first glance, travelling to Germany for further education and work was not an easy decision to take. I doubt calling that a cultural chock, but thank God I was able to gain a strong adaptability, flexibility and patience. Thus, I am satisfied with both experiences, in Morocco , as well as in Germany . Acknowledgements My gratitude goes to my parents , family members and neighbours for their support. Very grateful to all the scholars from pre-prep school to university . My special thanks goes to people, who helped me without my knowing . Please feel free to contact me for any remark. Happy to receive ideas and cooperate towards Projects for Good.","title":"bio"},{"location":"#welcome","text":"Passionate for general knowledge, I post in this peronal blog my updated works in different fields, namely energy-related and data-driven projects. Besides my background in energy sciences & experience in data science, I am keen on working on volunteering projects.","title":"Welcome"},{"location":"#academic-context","text":"Here are cited some bounded parts of my curriculum as well as the essential publications I have made in the course of my education.","title":"Academic context"},{"location":"#education","text":"Master's Degree M.Sc. Renewable Energy Cologne University of Applied Sciences, Germany Engineering Diploma, Branch: Energy Sciences Graduation grade: good National School of Mineral Industry (ENSMR), Rabat, Morocco","title":"Education"},{"location":"#publications","text":"M.Sc. thesis : \"Model-predictive control of energy flows in a district\" , Sep. 2022 - An analysis of the energy consumption data using Python programming language has been realised. Besides, an energy model, developed with a Functional Mock-up Interface (Dymola-Software), was used to implement a model-predictive control of energy flows in a district. As to the mathematical formulation and resolution, the Python Package Pyomo as well as the CPLEX-Solver were used to formulate and solve a mixed integer linear programming MILP-Problem. Conference-paper : \"Machine learning approach for finding an optimal operation strategy for a pv-diesel-hybrid system\" , October 2023 - A research paper discusses the implementation of AI, specifically Reinforcement Learning with a \u2018Deep-Q-learning algorithm\u2019, for the optimization of energy systems. Based on an already existing pv-diesel-systems\u2019 MATLAB-model, a new AI-powered Python-Script has been developed in order to find an optimal operation strategy. The work has been presented during the Poster-Exhibition at Cologne University of Applied Sciences, Germany Engineering Diploma thesis : \"Feasibility study for the preliminary assessment of a windpark project Lafarge Ciment, factory of T\u00e9touan\" , Academic year 2015/2016 - This work constitutes a full, complete feasibility study for windpark development. It responds to the local as well as worldwide requirements related to feed-in Tarif, geotechnics, environment and economical viability. Covered topics are, inter alia, statistical weather data analysis using the IEC 61400 standard, geography of area for wind turbines\u2019 placement, investigation of the visual impact and the economic feasibility of the project. Research Paper : \"Benefits of a time-based simulation of integrated energy systems\" , winter semester 2022/2023 - As part of the energy transition, greenhouse gases are to be minimized as well as the fluctuating renewable energies are to be integrated into the energy system. In order to simulate the complex energy systems, simulation models have been developed at various research institutes. This paper presents four mainsimulation models from different institutes and some related studies and projects. The possibilities to achieve defossilization are also discussed.","title":"Publications"},{"location":"#experience","text":"My background in energy sciences gave me a solid motivation towards engineering concept designs. Starting from Design and engineering of conveyor belts during my internship at the moroccan company Ciments de l'Atlas - CIMAT to Performance study of the demineralized water station at the K\u00e9nitra thermal power plant , which belongs to The National Office of Electricity and Drinking Water of Morocco, I have witnessed a tangible, on the ground contribution to many industries . Furthermore, my experience in Morocco gave me confidence and self-reliance to solve problems. Maybe one challenge to that was to find reliable, accurate, and if possible, live data sets . Later on, in Germany, I have found the ground of very large bulk of data available, but needs much effort to proccess. I came to the conclusion that data-driven improvements may take time, but still possible . It was at Impuls Energy Trading GmbH, that I could think in a better structural manner. The reason, I think, utilizing new team-work methods for project management . A combination of scrum and kanban in one workflow management system for the company was very helpful. I was then very satisfied with the workflow. Nevertheless, I have felt always self-reliant, as I helped fasten the work process with my automation algorithms . Especially at Deutsche Glassfaser GmbH that I could show my potential as a key team player with automation solutions I created with Python and VBA. At first glance, travelling to Germany for further education and work was not an easy decision to take. I doubt calling that a cultural chock, but thank God I was able to gain a strong adaptability, flexibility and patience. Thus, I am satisfied with both experiences, in Morocco , as well as in Germany .","title":"Experience"},{"location":"#acknowledgements","text":"My gratitude goes to my parents , family members and neighbours for their support. Very grateful to all the scholars from pre-prep school to university . My special thanks goes to people, who helped me without my knowing . Please feel free to contact me for any remark. Happy to receive ideas and cooperate towards Projects for Good.","title":"Acknowledgements"},{"location":"contact/email/","text":"Email service As an email service, I use ProtonMail Service . Please send me your requests to this email address .","title":"Email"},{"location":"contact/email/#email-service","text":"As an email service, I use ProtonMail Service . Please send me your requests to this email address .","title":"Email service"},{"location":"contact/research_profile/","text":"Research Profile My going-on reaseach works with full access could be found on the ORCID-Webpage. Please check my following Open Researcher and Contributor ID: https://orcid.org/0009-0000-1092-6032","title":"Research Profile"},{"location":"contact/research_profile/#research-profile","text":"My going-on reaseach works with full access could be found on the ORCID-Webpage. Please check my following Open Researcher and Contributor ID: https://orcid.org/0009-0000-1092-6032","title":"Research Profile"},{"location":"contact/social_media/","text":"Reacheable by email, please find my following social media accounts. LinkedIn Here you can find my experienced LinkedIn profile summary. LinkedIn-badge Github Almost all my projects could be found on my Github account.","title":"Social media"},{"location":"contact/social_media/#linkedin","text":"Here you can find my experienced LinkedIn profile summary. LinkedIn-badge","title":"LinkedIn"},{"location":"contact/social_media/#github","text":"Almost all my projects could be found on my Github account.","title":"Github"},{"location":"interests/leisure/","text":"Languages A couple years ago, when young, I strived to learn the french language. Now, I can speak 4+ languages. Besides my mother tongue language Arabic, I have learnen English, German, French and the basics in Spanish. For any communication, please contact me preferably in English. Language proficiency: Languages Proficiency Arabic Native French Distinguished English Superior German Advanced Language certificates: Toggle me! 1. English: Internet-based Test (TOEFL iBT) 2. German: DSH-Zeugnis (C1-Level) Sports Very interested in sports in general, I like specially football, running and boxing. My idol in sports is Muhammad Ali, may Allah have mercy on him.","title":"Leisure Activities"},{"location":"interests/leisure/#languages","text":"A couple years ago, when young, I strived to learn the french language. Now, I can speak 4+ languages. Besides my mother tongue language Arabic, I have learnen English, German, French and the basics in Spanish. For any communication, please contact me preferably in English. Language proficiency: Languages Proficiency Arabic Native French Distinguished English Superior German Advanced Language certificates: Toggle me! 1. English: Internet-based Test (TOEFL iBT) 2. German: DSH-Zeugnis (C1-Level)","title":"Languages"},{"location":"interests/leisure/#sports","text":"Very interested in sports in general, I like specially football, running and boxing. My idol in sports is Muhammad Ali, may Allah have mercy on him.","title":"Sports"},{"location":"interests/volunteering/","text":"Volunteering Projects Very much engaged in many extracurricular activities from free-of-charge extra-courses for students to organizing social and cultural events. Tutoring program as a member of the National School of Mineral Industry Student Association, I have volunteerly promoted tutoring programs, which offer free-of-charge extra-courses for students. Forum enterprises Held by the National School of Mineral Industry Rabat in Morocco, I cooperated to make the companies exhibition of 2014 successful. Buddy program As a mentee with this program at the Cologne University of Applied Sciences in Germany, I have helped an allocated international student during my academic year of 2020 with administrative procedures and formalities within and outside the university as well as language challenges and practical tips for everyday life in the new city. Future plans Willing to cooperate and help with any volunteering projects (e.g. medical and food supplies for far-reaching areas in Atlas Mountains). Please contact me!","title":"Volunteering"},{"location":"interests/volunteering/#volunteering-projects","text":"Very much engaged in many extracurricular activities from free-of-charge extra-courses for students to organizing social and cultural events.","title":"Volunteering Projects"},{"location":"interests/volunteering/#tutoring-program","text":"as a member of the National School of Mineral Industry Student Association, I have volunteerly promoted tutoring programs, which offer free-of-charge extra-courses for students.","title":"Tutoring program"},{"location":"interests/volunteering/#forum-enterprises","text":"Held by the National School of Mineral Industry Rabat in Morocco, I cooperated to make the companies exhibition of 2014 successful.","title":"Forum enterprises"},{"location":"interests/volunteering/#buddy-program","text":"As a mentee with this program at the Cologne University of Applied Sciences in Germany, I have helped an allocated international student during my academic year of 2020 with administrative procedures and formalities within and outside the university as well as language challenges and practical tips for everyday life in the new city.","title":"Buddy program"},{"location":"interests/volunteering/#future-plans","text":"Willing to cooperate and help with any volunteering projects (e.g. medical and food supplies for far-reaching areas in Atlas Mountains). Please contact me!","title":"Future plans"},{"location":"projects/dx_dash/","text":"Weather App using Flask Framework dx-Dash is a basic serverless Python-based web-application retrieving weather data through Weather-API calls. The following technologies have been used: Dev-framework: Flask Framework Visualization: Plotly Framework CSS framework: Bootstrap4 JavaScript: Vanilla JavaScript API services: weatherapi , google-maps-api , unsplash-api , city database api Deployed app on Render: dx-Dash Please note that the page loading may be slow as I have used the free web service of Render - Quote:\u201cRender spins down a Free web service that goes 15 minutes without receiving inbound traffic\u201d","title":"dx-Dash"},{"location":"projects/dx_dash/#weather-app-using-flask-framework","text":"dx-Dash is a basic serverless Python-based web-application retrieving weather data through Weather-API calls. The following technologies have been used: Dev-framework: Flask Framework Visualization: Plotly Framework CSS framework: Bootstrap4 JavaScript: Vanilla JavaScript API services: weatherapi , google-maps-api , unsplash-api , city database api Deployed app on Render: dx-Dash Please note that the page loading may be slow as I have used the free web service of Render - Quote:\u201cRender spins down a Free web service that goes 15 minutes without receiving inbound traffic\u201d","title":"Weather App using Flask Framework"},{"location":"projects/greedy_algo/","text":"Greedy-algorithm for energy renovation project fractional knapsack algorithm for optimizing energy renovation project Context The developement & application of this greedy algorithm have raised as I had the task to suggest restoration measures for buildings at the amperias GmbH company in Germany. The calculation method of the heat load is according to the standard DIN 12831 . In the course of this calculation, for each building structure component, such as walls, roofs, etc., an insulation material has been chosen from a set of choices. Objective An energy consultant assesses the building insulation, sets the requirements, but he/she has many insulation materials for each building component, which responds to the energetic requirements, namely the heating load. But, the performace of each insulation material reduces over time (the rate of depreciation). A well thoughtful choice for each building component should be proactive. Therefore, I reformulate the objective as to gain the maximum insulation, e.g. minimum heat loss costs, for the whole building while investing the maximum of a given money amount. Conditions Condition 1: to take into account the rate of depreciation, I set hereafter the lifespan of the building renovation project with 20 years. The assessement considers then heat losses after 20 years of usage for each insulation material. Condition 2: the renovation of a building element can be left out, limitation either due to no sufficient investment amount or because the impact of leaving the building element without any renovation is irrelevant. In the code, we can have as a result: (number of renovated elements) counter < (total number of building elements) df.shape[0] On the other hand, many other factors such as the varying price of the insulation material in the markt, I give with this code an automated solution to possible biases. Nomenclature For explenation purpose, I use both signs [] and {} with combined definitions in logics in Math and the programming language Python. Inv: the total renovation investment costs Hij: heat loss costs for each insulation material after 20 years of usage for each renovation measure j and building element i (In German: W\u00e4rmeverlustkosten) Kij: the material costs for each renovation measure j and building element i (Materialkosten) n: total number of building elements m: the maximum count of measures over all building elements for a normalized problem e: the index of the building element in the algorithm Here is an explenation: Mathematical problem: Set E = {E1, E2, ..., En} and each building element Ei has Mij as a set of its possible renovation measures, for i in [1, ..., n] and j in [1, ..., m] In the example given in the image: n = 4 E = {\"Window\", \"Ceiling\", \"Roof\", \"Wall\"} M1 = {\"Single-Glazed Window\", \"Double glazed window\"} M2 = {\"Mineral wool\", \"Spray foam\", \"Rigid foam boards\", \"Cellulose\", \"Sheep wool\"} M3 = {\"Structural insulated panels\", \"Foam board\", \"Rigid foam\"} M4 = {\"Blanket: batts and rolls\", \"Concrete blocks insulation\", \"Insulating concrete forms (ICFs)\", \"Foam board or rigid foam\", \"Reflective system\"} Normalized problem: In the programming code, we normalize the sets Mij for all i values in [1, ..., n], the set Mij could be written Mim and the above mentioned example becomes: n = 4, m = 5 E = {\"Window\", \"Ceiling\", \"Roof\", \"Wall\"} M15 = {\"\", \"\", \"\", \"Single-Glazed Window\", \"Double glazed window\"} M25 = {\"Mineral wool\", \"Spray foam\", \"Rigid foam boards\", \"Cellulose\", \"Sheep wool\"} M35 = {\"\", \"\", \"Structural insulated panels\", \"Foam board\", \"Rigid foam\"} M45 = {\"Blanket: batts and rolls\", \"Concrete blocks insulation\", \"Insulating concrete forms (ICFs)\", \"Foam board or rigid foam\", \"Reflective system\"} Note that, the measure \"\" in each set measures means that no measure could be taken, so the costs are taken in the algorithm 0.0 price unit (price unit: \u20ac, $, ... etc.). The costs' sets could be then written for example: K15 = [0.0, 0.0, 0.0, 10, 13] K25 = [45, 56, 67, 18, 19] K35 = [0.0, 0.0, 32.5, 16, 11] K45 = [93, 34, 45, 95, 23] Study case To grafically present the problem, here is an example of possible measures for a set of building components. The deduction of the values of Hij for each insulation material and building component can be done after heat loss calculations with the norm DIN 12831 . The deduction, as per the picture above, gives the following: U-value ================== DIN 12831 ======================> Hij Cost for each i building element and j renovation material = Kij Analogy: fractional knapsack algorithm To explain the resolution of the problem, I refer to the basics of the fractional knapsack algorithm in the following Webpage . The programmed solution calculates value x weight for each building element, which is in my case the product \"heat loss costs\" times \"material costs\" (Kej). Hereafter I have used 4 main steps. we apply here the algorithm in 'algorithm.ipynb' to our study case in the picture (see README.md). Package import import random import numpy as np import pandas as pd Inputs Here you can change the values for investment costs, number of building elements and the m number, which is defined for the normalized problem as the maximum count of measures over all building elements. # The total renovation investment costs Inv = 5000 # the total number of building elements n = 4 # the maximum count of measures over all building elements for a normalized problem m = 5 Parameters of the measures Values related to material costs and heat loss costs after 20 years of usage are set randomly for experimental purposes. Their values can also be loaded from other data sources, such as CSV-files. Experimental runs As no real values are available, I use hereafter experimental, sampled values: Material costs are taken with 1 decimal point and generated using samples from a uniform distribution from low value of 50 to the highest value of 300 price unit Heat loss costs after 20 years of usage from 10 to 1000 units d = {\"e\": [], \"Kij\": [], \"Hij\": []} for i in range(n): d[\"e\"].append(i) # Material costs d[\"Kij\"].append(np.round(np.random.uniform(low=50, high=300, size=(m-1,)), decimals=1)) # Heat loss costs TODO(\"Rethink low and high values\") d[\"Hij\"].append(np.round(np.random.uniform(low=10, high=1000, size=(m,)), decimals=1)) Step 1: Create a Pandas dataframe As mentioned in the Condition 2 in README.md file, the renovation of a building element can be left out, limitation either due to no sufficient investment amount or because the impact of leaving the building element without any renovation is irrelevant. So, we should add 0.0 price unit to the dictionary d and consequently to the dataframe df. for i in range(len(d[\"Kij\"])): d[\"Kij\"][i] = np.insert(d[\"Kij\"][i], [0], [0], axis=0) df = pd.DataFrame(data=d) Diplay the dataframe df df.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } e Kij Hij 0 0 [0.0, 150.7, 272.4, 294.1, 92.9] [408.2, 33.3, 921.1, 270.5, 666.7] 1 1 [0.0, 98.8, 157.9, 284.4, 256.1] [410.5, 45.0, 97.1, 419.4, 472.6] 2 2 [0.0, 160.0, 280.5, 219.4, 153.2] [964.4, 148.8, 518.1, 748.6, 139.6] 3 3 [0.0, 68.0, 294.2, 107.6, 81.2] [293.3, 530.7, 618.7, 332.8, 842.2] Step 2: Loop over the set of building elements Find the indices in the dataframe of the greedy renovation measures. To do so, we calculate $\\min_{e}$ for each e building element. We define hereafter some helpers variables and find sort their values. indices = [] helper = [] Min = [] for i in df.index: product = [km * kg for (km, kg) in zip(df[\"Kij\"][i], df[\"Hij\"][i])] indices.append((i, product.index(min([value for value in product if value > 0])))) helper.append(i) for i in df.index: k = helper.index(i) Min.append((i, np.round(df[\"Kij\"][i][indices[k][1]] * df[\"Hij\"][i][indices[k][1]], decimals=1))) Step 3: Sort & reorder the building elements # sort ascendingly Min.sort(key=lambda x: x[1]) dt = pd.DataFrame(data=Min) dt.columns = [\"e\", \"Min_e\"] Diplay the dataframe dt Note that the elements are well ascendingly sorted. dt.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } e Min_e 0 1 4446.0 1 0 5018.3 2 2 21386.7 3 3 35809.3 Step 4: Investment plan Invest Inv starting with the lowest value of $\\min_{e}$ with some help-variables # Display for the project's inputs: print(\"Renovation project's infos:\") print(\"\\tThe number of building elements:\\t{}.\".format(n)) print(\"\\tThe total renovation investment costs:\\t{} price unit.\".format(Inv)) # Display for the investement plan: print(\"\\nInvestement plan with ordered measures:\") count = 0 toInvest = Inv sum = 0 counter = 0 while toInvest > 0 and count < len(Min): flag = helper.index(Min[count][0]) if toInvest > df[\"Kij\"][Min[count][0]][indices[flag][1]]: toInvest -= df[\"Kij\"][Min[count][0]][indices[flag][1]] print( \"\\tRenovation measure {}\\tKij = {} price unit.\\t\\tHij = {} price unit.\".format(Min[count][0], df[\"Kij\"][Min[count][0]][indices[flag][1]], df[\"Hij\"][Min[count][0]][indices[flag][1]])) sum += df[\"Kij\"][Min[count][0]][indices[flag][1]] counter += 1 count += 1 else: pass print(\"\\n\\tNumber of chosen buiding elements for renovation: {}.\".format(counter)) print(\"\\tInvested sum: {} price unit.\".format(sum)) Renovation project's infos: The number of building elements: 4. The total renovation investment costs: 500 price unit. Investement plan with ordered measures: Renovation measure 3 Kij = 247.7 price unit. Hij = 49.4 price unit. Renovation measure 1 Kij = 61.5 price unit. Hij = 243.1 price unit. Renovation measure 0 Kij = 62.6 price unit. Hij = 436.3 price unit. Renovation measure 2 Kij = 69.2 price unit. Hij = 845.8 price unit. Number of chosen buiding elements for renovation: 4. Invested sum: 441.0 price unit. Credits Credits goes to algodaily for their lessons' webpage in fractional knapsack problem.","title":"Energy-project"},{"location":"projects/greedy_algo/#greedy-algorithm-for-energy-renovation-project","text":"fractional knapsack algorithm for optimizing energy renovation project","title":"Greedy-algorithm for energy renovation project"},{"location":"projects/greedy_algo/#context","text":"The developement & application of this greedy algorithm have raised as I had the task to suggest restoration measures for buildings at the amperias GmbH company in Germany. The calculation method of the heat load is according to the standard DIN 12831 . In the course of this calculation, for each building structure component, such as walls, roofs, etc., an insulation material has been chosen from a set of choices.","title":"Context"},{"location":"projects/greedy_algo/#objective","text":"An energy consultant assesses the building insulation, sets the requirements, but he/she has many insulation materials for each building component, which responds to the energetic requirements, namely the heating load. But, the performace of each insulation material reduces over time (the rate of depreciation). A well thoughtful choice for each building component should be proactive. Therefore, I reformulate the objective as to gain the maximum insulation, e.g. minimum heat loss costs, for the whole building while investing the maximum of a given money amount.","title":"Objective"},{"location":"projects/greedy_algo/#conditions","text":"Condition 1: to take into account the rate of depreciation, I set hereafter the lifespan of the building renovation project with 20 years. The assessement considers then heat losses after 20 years of usage for each insulation material. Condition 2: the renovation of a building element can be left out, limitation either due to no sufficient investment amount or because the impact of leaving the building element without any renovation is irrelevant. In the code, we can have as a result: (number of renovated elements) counter < (total number of building elements) df.shape[0] On the other hand, many other factors such as the varying price of the insulation material in the markt, I give with this code an automated solution to possible biases.","title":"Conditions"},{"location":"projects/greedy_algo/#nomenclature","text":"For explenation purpose, I use both signs [] and {} with combined definitions in logics in Math and the programming language Python. Inv: the total renovation investment costs Hij: heat loss costs for each insulation material after 20 years of usage for each renovation measure j and building element i (In German: W\u00e4rmeverlustkosten) Kij: the material costs for each renovation measure j and building element i (Materialkosten) n: total number of building elements m: the maximum count of measures over all building elements for a normalized problem e: the index of the building element in the algorithm Here is an explenation: Mathematical problem: Set E = {E1, E2, ..., En} and each building element Ei has Mij as a set of its possible renovation measures, for i in [1, ..., n] and j in [1, ..., m] In the example given in the image: n = 4 E = {\"Window\", \"Ceiling\", \"Roof\", \"Wall\"} M1 = {\"Single-Glazed Window\", \"Double glazed window\"} M2 = {\"Mineral wool\", \"Spray foam\", \"Rigid foam boards\", \"Cellulose\", \"Sheep wool\"} M3 = {\"Structural insulated panels\", \"Foam board\", \"Rigid foam\"} M4 = {\"Blanket: batts and rolls\", \"Concrete blocks insulation\", \"Insulating concrete forms (ICFs)\", \"Foam board or rigid foam\", \"Reflective system\"} Normalized problem: In the programming code, we normalize the sets Mij for all i values in [1, ..., n], the set Mij could be written Mim and the above mentioned example becomes: n = 4, m = 5 E = {\"Window\", \"Ceiling\", \"Roof\", \"Wall\"} M15 = {\"\", \"\", \"\", \"Single-Glazed Window\", \"Double glazed window\"} M25 = {\"Mineral wool\", \"Spray foam\", \"Rigid foam boards\", \"Cellulose\", \"Sheep wool\"} M35 = {\"\", \"\", \"Structural insulated panels\", \"Foam board\", \"Rigid foam\"} M45 = {\"Blanket: batts and rolls\", \"Concrete blocks insulation\", \"Insulating concrete forms (ICFs)\", \"Foam board or rigid foam\", \"Reflective system\"} Note that, the measure \"\" in each set measures means that no measure could be taken, so the costs are taken in the algorithm 0.0 price unit (price unit: \u20ac, $, ... etc.). The costs' sets could be then written for example: K15 = [0.0, 0.0, 0.0, 10, 13] K25 = [45, 56, 67, 18, 19] K35 = [0.0, 0.0, 32.5, 16, 11] K45 = [93, 34, 45, 95, 23]","title":"Nomenclature"},{"location":"projects/greedy_algo/#study-case","text":"To grafically present the problem, here is an example of possible measures for a set of building components. The deduction of the values of Hij for each insulation material and building component can be done after heat loss calculations with the norm DIN 12831 . The deduction, as per the picture above, gives the following: U-value ================== DIN 12831 ======================> Hij Cost for each i building element and j renovation material = Kij Analogy: fractional knapsack algorithm To explain the resolution of the problem, I refer to the basics of the fractional knapsack algorithm in the following Webpage . The programmed solution calculates value x weight for each building element, which is in my case the product \"heat loss costs\" times \"material costs\" (Kej). Hereafter I have used 4 main steps. we apply here the algorithm in 'algorithm.ipynb' to our study case in the picture (see README.md). Package import import random import numpy as np import pandas as pd Inputs Here you can change the values for investment costs, number of building elements and the m number, which is defined for the normalized problem as the maximum count of measures over all building elements. # The total renovation investment costs Inv = 5000 # the total number of building elements n = 4 # the maximum count of measures over all building elements for a normalized problem m = 5 Parameters of the measures Values related to material costs and heat loss costs after 20 years of usage are set randomly for experimental purposes. Their values can also be loaded from other data sources, such as CSV-files. Experimental runs As no real values are available, I use hereafter experimental, sampled values: Material costs are taken with 1 decimal point and generated using samples from a uniform distribution from low value of 50 to the highest value of 300 price unit Heat loss costs after 20 years of usage from 10 to 1000 units d = {\"e\": [], \"Kij\": [], \"Hij\": []} for i in range(n): d[\"e\"].append(i) # Material costs d[\"Kij\"].append(np.round(np.random.uniform(low=50, high=300, size=(m-1,)), decimals=1)) # Heat loss costs TODO(\"Rethink low and high values\") d[\"Hij\"].append(np.round(np.random.uniform(low=10, high=1000, size=(m,)), decimals=1))","title":"Study case"},{"location":"projects/greedy_algo/#step-1-create-a-pandas-dataframe","text":"As mentioned in the Condition 2 in README.md file, the renovation of a building element can be left out, limitation either due to no sufficient investment amount or because the impact of leaving the building element without any renovation is irrelevant. So, we should add 0.0 price unit to the dictionary d and consequently to the dataframe df. for i in range(len(d[\"Kij\"])): d[\"Kij\"][i] = np.insert(d[\"Kij\"][i], [0], [0], axis=0) df = pd.DataFrame(data=d) Diplay the dataframe df df.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } e Kij Hij 0 0 [0.0, 150.7, 272.4, 294.1, 92.9] [408.2, 33.3, 921.1, 270.5, 666.7] 1 1 [0.0, 98.8, 157.9, 284.4, 256.1] [410.5, 45.0, 97.1, 419.4, 472.6] 2 2 [0.0, 160.0, 280.5, 219.4, 153.2] [964.4, 148.8, 518.1, 748.6, 139.6] 3 3 [0.0, 68.0, 294.2, 107.6, 81.2] [293.3, 530.7, 618.7, 332.8, 842.2]","title":"Step 1: Create a Pandas dataframe"},{"location":"projects/greedy_algo/#step-2-loop-over-the-set-of-building-elements","text":"Find the indices in the dataframe of the greedy renovation measures. To do so, we calculate $\\min_{e}$ for each e building element. We define hereafter some helpers variables and find sort their values. indices = [] helper = [] Min = [] for i in df.index: product = [km * kg for (km, kg) in zip(df[\"Kij\"][i], df[\"Hij\"][i])] indices.append((i, product.index(min([value for value in product if value > 0])))) helper.append(i) for i in df.index: k = helper.index(i) Min.append((i, np.round(df[\"Kij\"][i][indices[k][1]] * df[\"Hij\"][i][indices[k][1]], decimals=1)))","title":"Step 2: Loop over the set of building elements"},{"location":"projects/greedy_algo/#step-3-sort-reorder-the-building-elements","text":"# sort ascendingly Min.sort(key=lambda x: x[1]) dt = pd.DataFrame(data=Min) dt.columns = [\"e\", \"Min_e\"] Diplay the dataframe dt Note that the elements are well ascendingly sorted. dt.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } e Min_e 0 1 4446.0 1 0 5018.3 2 2 21386.7 3 3 35809.3","title":"Step 3: Sort &amp; reorder the building elements"},{"location":"projects/greedy_algo/#step-4-investment-plan","text":"Invest Inv starting with the lowest value of $\\min_{e}$ with some help-variables # Display for the project's inputs: print(\"Renovation project's infos:\") print(\"\\tThe number of building elements:\\t{}.\".format(n)) print(\"\\tThe total renovation investment costs:\\t{} price unit.\".format(Inv)) # Display for the investement plan: print(\"\\nInvestement plan with ordered measures:\") count = 0 toInvest = Inv sum = 0 counter = 0 while toInvest > 0 and count < len(Min): flag = helper.index(Min[count][0]) if toInvest > df[\"Kij\"][Min[count][0]][indices[flag][1]]: toInvest -= df[\"Kij\"][Min[count][0]][indices[flag][1]] print( \"\\tRenovation measure {}\\tKij = {} price unit.\\t\\tHij = {} price unit.\".format(Min[count][0], df[\"Kij\"][Min[count][0]][indices[flag][1]], df[\"Hij\"][Min[count][0]][indices[flag][1]])) sum += df[\"Kij\"][Min[count][0]][indices[flag][1]] counter += 1 count += 1 else: pass print(\"\\n\\tNumber of chosen buiding elements for renovation: {}.\".format(counter)) print(\"\\tInvested sum: {} price unit.\".format(sum)) Renovation project's infos: The number of building elements: 4. The total renovation investment costs: 500 price unit. Investement plan with ordered measures: Renovation measure 3 Kij = 247.7 price unit. Hij = 49.4 price unit. Renovation measure 1 Kij = 61.5 price unit. Hij = 243.1 price unit. Renovation measure 0 Kij = 62.6 price unit. Hij = 436.3 price unit. Renovation measure 2 Kij = 69.2 price unit. Hij = 845.8 price unit. Number of chosen buiding elements for renovation: 4. Invested sum: 441.0 price unit.","title":"Step 4: Investment plan"},{"location":"projects/greedy_algo/#credits","text":"Credits goes to algodaily for their lessons' webpage in fractional knapsack problem.","title":"Credits"}]}